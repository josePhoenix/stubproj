#!/bin/bash
set -euo pipefail
source ~/.stubproj/bin/common.sh

if [ "$#" -ne 4 ]; then
    show_usage
    exit 1
fi

if [ -z $(which conda) ]; then
    echo "Install conda first: http://conda.pydata.org/miniconda.html"
    exit 1
fi

PROJ_NAME="$1"
PROJ_HOST=$(resolve_to_ip "$2")
PROJ_DIR="$3"
PROJ_PORT="$4"

echo "PROJ_HOST=" $PROJ_HOST
echo "PROJ_DIR=" $PROJ_DIR
echo "PROJ_NAME=" $PROJ_NAME
echo "PROJ_PORT=" $PROJ_PORT

# Setting up a computing environment on a remote server
mkdir -p "$PROJ_DIR"
for subdir in data notebooks output scratch; do
    mkdir -p "$PROJ_DIR/$subdir"
done

cp -R ~/.stubproj/skel/* "$PROJ_DIR/"

# move into directory
cd "$PROJ_DIR"

conda create -n $PROJ_NAME --yes --file "./conda_requirements.txt"

conda run -n $PROJ_NAME -- pip install circus
conda run -n $PROJ_NAME -- python3 "./populate_circus.py" "$PROJ_DIR"
rm ./populate_circus.py

conda run -n $PROJ_NAME -- python3 "./populate_jupyter_notebook_config.py" $PORT
rm ./populate_jupyter_notebook_config.py

git init .

project_spec="$PROJ_NAME $(hostname) $PROJ_DIR $PORT"

echo "Okay, all set in $PROJ_DIR"
echo "Appending a line to ~/.stubproj/projects"
echo $project_spec >> ~/.stubproj/projects
echo
echo "Add this line to ~/.stubproj/projects on machines where you want to connect to this environment:"
echo
echo $project_spec
echo
echo "If you haven't set up the shell aliases for this (remote) machine, add them to your bash startup files:"
echo
echo "echo \"source ~/.stubproj/bin/remote-aliases.sh\" >> ~/.bashrc"
echo
echo "If you haven't set up the shell aliases for your (local) machine, add them to your bash startup files:"
echo
cat ~/.stubproj/bin/local-aliases.sh
echo
echo "Done!"

# create conda env
# install jupyter notebook, ipywidgets, astropy
# (is there something like requirements.txt?)
# notebooks/
# data/
# output/
# scratch/
#
# create password and cert
#
# proj_go
# proj_nb
#
# shell alias - on server
#    source activate envname
#    cd proj root
#    pid = `cat $PROJDIR/notebook.pid`
#    if [ ! -e /proc/$pid -a /proc/$pid/exe ]; then
#       /do/thing.py &
#       echo $! > $PROJDIR/notebook.pid
#    else
#
#
# shell alias - local
#    (sleep 1; open http://host:port/) & ssh remotehost "go_lsst"